name: Build and Deploy to GKE 7

on:
  push:
    branches:
      - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: mkt-002-gke
  GKE_ZONE: europe-west2
  DEPLOYMENT_NAME: frontend2
  IMAGE: frontend2

jobs:
  setup-build-publish-deploy:

    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Test Helm
    - name: Build
      run: |-
        rm -rf /tmp/helm3
        HELM_CLIENT_VERSION=3.7.2
        curl https://get.helm.sh/helm-v${HELM_CLIENT_VERSION}-linux-amd64.tar.gz -O
        mkdir /tmp/helm3
        tar -xvf helm-v${HELM_CLIENT_VERSION}-linux-amd64.tar.gz -C /tmp/helm3
        PATH=${PATH}:/tmp/helm3/linux-amd64
        HELM_HOME=/home/${USERNAME}/.helm

        helm repo add newrelic https://helm-charts.newrelic.com
        helm search repo newrelic/

        cat ${GITHUB_WORKSPACE}/newrelic/nri-bundle/override-values.yaml

        helm upgrade --reuse-values -f ${GITHUB_WORKSPACE}/override-values.yaml \
          newrelic-bundle newrelic/nri-bundle \
          --install \
          --set global.licenseKey=123 \
          --set global.cluster=456 \
          --dry-run \
          --debug

    # # Build the Docker image
    # - name: Build
    #   run: |-
    #     docker build \
    #       --tag "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" \
    #       --build-arg GITHUB_SHA="$GITHUB_SHA" \
    #       --build-arg GITHUB_REF="$GITHUB_REF" \
    #       .

    # # Push the Docker image to Google Container Registry
    # - name: Publish
    #   run: |-
    #     docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    # # Set up kustomize
    # - name: Set up Kustomize
    #   run: |-
    #     curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
    #     chmod u+x ./kustomize

    # # Deploy the Docker image to the GKE cluster
    # - name: Deploy
    #   run: |-
    #     ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
    #     ./kustomize build . | kubectl apply -f -
    #     kubectl rollout status deployment/$DEPLOYMENT_NAME
    #     kubectl get services -o wide
